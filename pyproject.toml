# https://peps.python.org/pep-0517/
# https://hatch.pypa.io/latest/config/build/
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# https://peps.python.org/pep-0621/
[project]
name = "sparkle_stats"
description = "transformer models gone blinky"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Jan Funke", email = "funkej@janelia.hhmi.org" },
    { name = "Alex Hillsley", email = "hillsleya@janelia.hhmi.org" },
    { name = "Yogesh Thambidurai", email = "thambiduraiy@janelia.hhmi.org" },
]
dynamic = ["version"]
dependencies = [
    "jax",
    "blinx",
]


[project.optional-dependencies]
dev = ["pre-commit", "pytest", "pytest-cov", "ruff", "twine", "build"]
test = ["pytest", "pytest-cov"]
docs = [
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx_togglebutton",
    "tomli",
    "jupyter_sphinx",
    "plotly",
]

[project.urls]
homepage = "https://github.com/funkelab/blinx_sparkle_stats"

# https://hatch.pypa.io/latest/version/
[tool.hatch.version]
path = "sparkle_stats/__init__.py"

# https://docs.astral.sh/ruff/
[tool.ruff]
target-version = "py38"
src = ["sparkle_stats"]

[tool.ruff.lint]
select = [
    "F", # pyflakes
    "E", # pycodestyle
    "I", # isort
    "UP", # pyupgrade
    "RUF", # ruff specific rules
]
# ruff format takes care of this
# errors on a lot of docstrings
# can unignore and do `ruff check --add-noqa` instead
ignore = ["E501"]

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "pragma: ${PY_MAJOR_VERSION} no cover",
    "if TYPE_CHECKING:",
    "\\.\\.\\.",
]

[tool.mypy]
files = "sparkle_stats"
strict = false
allow_untyped_defs = true
# allow_untyped_calls = true
disallow_any_generics = false
ignore_missing_imports = true